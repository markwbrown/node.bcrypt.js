0 info it worked if it ends with ok
1 verbose cli [ '/Users/aurelius/.nvm/versions/node/v6.11.3/bin/node',
1 verbose cli   '/Users/aurelius/.nvm/versions/node/v6.11.3/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '--access',
1 verbose cli   'public' ]
2 info using npm@3.10.10
3 info using node@v6.11.3
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/aurelius/WebStorm Projects/node.bcrypt.js',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package.tgz not in flight; packing
9 verbose correctMkdir /Users/aurelius/.npm correctMkdir not in flight; initializing
10 info lifecycle @brightproductions/bcrypt@0.8.7~prepublish: @brightproductions/bcrypt@0.8.7
11 silly lifecycle @brightproductions/bcrypt@0.8.7~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package.tgz',
12 verbose tar pack   '/Users/aurelius/WebStorm Projects/node.bcrypt.js' ]
13 verbose tarball /Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package.tgz
14 verbose folder /Users/aurelius/WebStorm Projects/node.bcrypt.js
15 verbose addLocalTarball adding from inside cache /Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package.tgz
16 verbose correctMkdir /Users/aurelius/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd @brightproductions/bcrypt@0.8.7
18 verbose afterAdd /Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package/package.json not in flight; writing
19 verbose correctMkdir /Users/aurelius/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package/package.json written
21 silly publish { name: '@brightproductions/bcrypt',
21 silly publish   description: 'A bcrypt library for NodeJS.',
21 silly publish   keywords:
21 silly publish    [ 'bcrypt',
21 silly publish      'password',
21 silly publish      'auth',
21 silly publish      'authentication',
21 silly publish      'encryption',
21 silly publish      'crypt',
21 silly publish      'crypto' ],
21 silly publish   main: './bcrypt',
21 silly publish   version: '0.8.7',
21 silly publish   author: { name: 'Nick Campbell', url: 'https://github.com/ncb000gt' },
21 silly publish   engines: { node: '>= 0.6.0' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/markwbrown/node.bcrypt.js.git' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/markwbrown/node.bcrypt.js/issues' },
21 silly publish   scripts:
21 silly publish    { test: 'node-gyp configure build && nodeunit test',
21 silly publish      install: 'node-gyp rebuild' },
21 silly publish   dependencies:
21 silly publish    { '@brightproductions/bindings': '1.2.1',
21 silly publish      '@brightproductions/nan': '2.3.5' },
21 silly publish   devDependencies: { nodeunit: '~0.9.1' },
21 silly publish   contributors:
21 silly publish    [ { name: 'Antonio Salazar Cardozo',
21 silly publish        email: 'savedfastcool@gmail.com',
21 silly publish        url: 'https://github.com/Shadowfiend' },
21 silly publish      { name: 'Van Nguyen',
21 silly publish        email: 'the.gol.effect@gmail.com',
21 silly publish        url: 'https://github.com/thegoleffect' },
21 silly publish      { name: 'David Trejo',
21 silly publish        email: 'david@dtrejo.com',
21 silly publish        url: 'https://github.com/dtrejo' },
21 silly publish      { name: 'Ben Glow',
21 silly publish        email: 'glen.low@pixelglow.com',
21 silly publish        url: 'https://github.com/pixelglow' },
21 silly publish      { name: 'NewITFarmer.com',
21 silly publish        url: 'https://github.com/newitfarmer' },
21 silly publish      { name: 'Alfred Westerveld',
21 silly publish        email: 'alfredwesterveld@gmail.com',
21 silly publish        url: 'https://github.com/alfredwesterveld' },
21 silly publish      { name: 'Vincent Côté-Roy',
21 silly publish        email: 'vincentcr@gmail.com',
21 silly publish        url: 'https://github.com/vincentcr' },
21 silly publish      { name: 'Lloyd Hilaiel',
21 silly publish        email: 'lloyd@hilaiel.com',
21 silly publish        url: 'https://github.com/lloyd' },
21 silly publish      { name: 'Roman Shtylman',
21 silly publish        email: 'shtylman@gmail.com',
21 silly publish        url: 'https://github.com/shtylman' },
21 silly publish      { name: 'Vadim Graboys',
21 silly publish        email: 'dimva13@gmail.com',
21 silly publish        url: 'https://github.com/vadimg' },
21 silly publish      { name: 'Ben Noorduis', url: 'https://github.com/bnoordhuis' },
21 silly publish      { name: 'Nate Rajlich',
21 silly publish        email: 'nathan@tootallnate.net',
21 silly publish        url: 'https://github.com/tootallnate' },
21 silly publish      { name: 'Sean McArthur',
21 silly publish        email: 'sean.monstar@gmail.com',
21 silly publish        url: 'https://github.com/seanmonstar' },
21 silly publish      { name: 'Fanie Oosthuysen',
21 silly publish        email: 'fanie.oosthuysen@gmail.com',
21 silly publish        url: 'https://github.com/weareu' } ],
21 silly publish   gypfile: true,
21 silly publish   homepage: 'https://github.com/markwbrown/node.bcrypt.js#readme',
21 silly publish   directories: { example: 'examples', test: 'test' },
21 silly publish   readme: '# node.bcrypt.js\nThis is bcrypt@0.8.7. You shouldn\'t be using this. Only published as a bridge to getting some old passwords hashes brought up to date\n\n[![Join the chat at https://gitter.im/ncb000gt/node.bcrypt.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/ncb000gt/node.bcrypt.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/ncb000gt/node.bcrypt.js.svg?branch=master)](https://travis-ci.org/ncb000gt/node.bcrypt.js)\n\nLib to help you hash passwords.\n[bcrypt on wikipedia][bcryptwiki]\n\nCatalyst for this module: [How To Safely Store A Password][codahale]\n\n## If You Are Submitting Bugs/Issues\n\nFirst, make sure that the version of node you are using is a _stable_ version. You\'ll know this because it\'ll have an even major release number. We do not currently support unstable versions and while the module may happen to work on some unstable versions you\'ll find that we quickly close issues if you\'re not using a stable version.\n\nIf you are on a stable version of node, we can\'t magically know what you are doing to expose an issue, it is best if you provide a snippet of code or log files if you\'re having an install issue. This snippet need not include your secret sauce, but it must replicate the issue you are describing. The issues that get closed without resolution tend to be the ones that don\'t help us help you. Thanks.\n\n\n## Version Compatibility\n\n| Node Version | Bcrypt Version |\n| ---- | ---- |\n| 0.4.x | <= 0.4.x |\n| 0.6.x | >= 0.5.x |\n| 0.8.x | >= 0.5.x |\n| 0.10.x | >= 0.5.x |\n| 0.11.x | >= 0.8.x |\n\nWindows users should make sure to have at least node 0.8.5 installed and version >= 0.7.1 of this module.\n\n`node-gyp` only works with stable/released versions of node. Since the `bcrypt` module uses `node-gyp` to build and install you\'ll need a stable version of node to use bcrypt. If you do not you\'ll likely see an error that starts with:\n\n```\ngyp ERR! stack Error: "pre" versions of node cannot be installed, use the --nodedir flag instead\n```\n\n## Security Issues/Concerns\n\n> Per bcrypt implementation, only the first 72 characters of a string are used. Any extra characters are ignored when matching passwords.\n\nAs should be the case with any security tool, this library should be scrutinized by anyone using it. If you find or suspect an issue with the code- please bring it to my attention and I\'ll spend some time trying to make sure that this tool is as secure as possible.\n\nTo make it easier for people using this tool to analyze what has been surveyed, here is a list of BCrypt related security issues/concerns as they\'ve come up.\n\n* An [issue with passwords][jtr] was found with a version of the Blowfish algorithm developed for John the Ripper. This is not present in the OpenBSD version and is thus not a problem for this module. HT [zooko][zooko].\n\n## Dependencies\n\n* NodeJS\n* `node-gyp`\n * Please check the dependencies for this tool at: https://github.com/nodejs/node-gyp\n  * Windows users will need the options for c# and c++ installed with their visual studio instance.\n  * Python 2.x\n* `OpenSSL` - This is only required to build the `bcrypt` project if you are using versions <= 0.7.7. Otherwise, we\'re using the builtin node crypto bindings for seed data (which use the same OpenSSL code paths we were, but don\'t have the external dependency).\n\n## Install via NPM\n```\nnpm install bcrypt\n```\n\n***Note:*** OS X users using Xcode 4.3.1 or above may need to run the following command in their terminal prior to installing if errors occur regarding xcodebuild: ```sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer```\n\n## Usage\n\n### async (recommended)\n\n```javascript\nvar bcrypt = require(\'bcrypt\');\nconst saltRounds = 10;\nconst myPlaintextPassword = \'s0/\\/\\P4$$w0rD\';\nconst someOtherPlaintextPassword = \'not_bacon\';\n```\n\n#### To hash a password:\n\nTechnique 1 (generate a salt and hash on separate function calls):\n\n```javascript\nbcrypt.genSalt(saltRounds, function(err, salt) {\n    bcrypt.hash(myPlaintextPassword, salt, function(err, hash) {\n        // Store hash in your password DB.\n    });\n});\n```\n\nTechnique 2 (auto-gen a salt and hash):\n\n```javascript\nbcrypt.hash(myPlaintextPassword, saltRounds, function(err, hash) {\n  // Store hash in your password DB.\n});\n```\n\nNote that both techniques achieve the same end-result.\n\n#### To check a password:\n\n```javascript\n// Load hash from your password DB.\nbcrypt.compare(myPlaintextPassword, hash, function(err, res) {\n    // res == true\n});\nbcrypt.compare(someOtherPlaintextPassword, hash, function(err, res) {\n    // res == false\n});\n```\n\n\n### sync\n\n```javascript\nvar bcrypt = require(\'bcrypt\');\nconst saltRounds = 10;\nconst myPlaintextPassword = \'s0/\\/\\P4$$w0rD\';\nconst someOtherPlaintextPassword = \'not_bacon\';\n```\n\n#### To hash a password:\n\nTechnique 1 (generate a salt and hash on separate function calls):\n\n```javascript\nvar salt = bcrypt.genSaltSync(saltRounds);\nvar hash = bcrypt.hashSync(myPlaintextPassword, salt);\n// Store hash in your password DB.\n```\n\nTechnique 2 (auto-gen a salt and hash):\n\n```javascript\nvar hash = bcrypt.hashSync(myPlaintextPassword, saltRounds);\n// Store hash in your password DB.\n```\n\nAs with async, both techniques achieve the same end-result.\n\n#### To check a password:\n\n```javascript\n// Load hash from your password DB.\nbcrypt.compareSync(myPlaintextPassword, hash); // true\nbcrypt.compareSync(someOtherPlaintextPassword, hash); // false\n```\n\n## API\n\n`BCrypt.`\n\n  * `genSaltSync(rounds)`\n    * `rounds` - [OPTIONAL] - the cost of processing the data. (default - 10)\n  * `genSalt(rounds, cb)`\n    * `rounds` - [OPTIONAL] - the cost of processing the data. (default - 10)\n    * `cb` - [REQUIRED] - a callback to be fired once the salt has been generated. uses eio making it asynchronous.\n      * `err` - First parameter to the callback detailing any errors.\n      * `salt` - Second parameter to the callback providing the generated salt.\n  * `hashSync(data, salt)`\n    * `data` - [REQUIRED] - the data to be encrypted.\n    * `salt` - [REQUIRED] - the salt to be used to hash the password. if specified as a number then a salt will be generated with the specified number of rounds and used (see example under **Usage**).\n  * `hash(data, salt, cb)`\n    * `data` - [REQUIRED] - the data to be encrypted.\n    * `salt` - [REQUIRED] - the salt to be used to hash the password. if specified as a number then a salt will be generated with the specified number of rounds and used (see example under **Usage**).\n    * `cb` - [REQUIRED] - a callback to be fired once the data has been encrypted. uses eio making it asynchronous.\n      * `err` - First parameter to the callback detailing any errors.\n      * `encrypted` - Second parameter to the callback providing the encrypted form.\n  * `compareSync(data, encrypted)`\n    * `data` - [REQUIRED] - data to compare.\n    * `encrypted` - [REQUIRED] - data to be compared to.\n  * `compare(data, encrypted, cb)`\n    * `data` - [REQUIRED] - data to compare.\n    * `encrypted` - [REQUIRED] - data to be compared to.\n    * `cb` - [REQUIRED] - a callback to be fired once the data has been compared. uses eio making it asynchronous.\n      * `err` - First parameter to the callback detailing any errors.\n      * `same` - Second parameter to the callback providing whether the data and encrypted forms match [true | false].\n  * `getRounds(encrypted)` - return the number of rounds used to encrypt a given hash\n    * `encrypted` - [REQUIRED] - hash from which the number of rounds used should be extracted.\n\n## A Note on Rounds\n\nA note about the cost. When you are hashing your data the module will go through a series of rounds to give you a secure hash. The value you submit there is not just the number of rounds that the module will go through to hash your data. The module will use the value you enter and go through `2^rounds` iterations of processing.\n\nFrom @garthk, on a 2GHz core you can roughly expect:\n\n    rounds=8 : ~40 hashes/sec\n    rounds=9 : ~20 hashes/sec\n    rounds=10: ~10 hashes/sec\n    rounds=11: ~5  hashes/sec\n    rounds=12: 2-3 hashes/sec\n    rounds=13: ~1 sec/hash\n    rounds=14: ~1.5 sec/hash\n    rounds=15: ~3 sec/hash\n    rounds=25: ~1 hour/hash\n    rounds=31: 2-3 days/hash\n\n\n## Hash Info\n\nThe characters that comprise the resultant hash are `./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$`.\n\nResultant hashes will be 60 characters long.\n\n## Testing\n\nIf you create a pull request, tests better pass :)\n\n```\nnpm install\nnpm test\n```\n\n## Credits\n\nThe code for this comes from a few sources:\n\n* blowfish.cc - OpenBSD\n* bcrypt.cc - OpenBSD\n* bcrypt::gen_salt - [gen_salt inclusion to bcrypt][bcryptgs]\n* bcrypt_node.cc - me\n\n## Contributors\n\n* [Antonio Salazar Cardozo][shadowfiend] - Early MacOS X support (when we used libbsd)\n* [Ben Glow][pixelglow] - Fixes for thread safety with async calls\n* [Van Nguyen][thegoleffect] - Found a timing attack in the comparator\n* [NewITFarmer][newitfarmer] - Initial Cygwin support\n* [David Trejo][dtrejo] - packaging fixes\n* [Alfred Westerveld][alfredwesterveld] - packaging fixes\n* [Vincent Côté-Roy][vincentr] - Testing around concurrency issues\n* [Lloyd Hilaiel][lloyd] - Documentation fixes\n* [Roman Shtylman][shtylman] - Code refactoring, general rot reduction, compile options, better memory management with delete and new, and an upgrade to libuv over eio/ev.\n* [Vadim Graboys][vadimg] - Code changes to support 0.5.5+\n* [Ben Noordhuis][bnoordhuis] - Fixed a thread safety issue in nodejs that was perfectly mappable to this module.\n* [Nate Rajlich][tootallnate] - Bindings and build process.\n* [Sean McArthur][seanmonstar] - Windows Support\n* [Fanie Oosthuysen][weareu] - Windows Support\n\n## License\nUnless stated elsewhere, file headers or otherwise, the license as stated in the LICENSE file.\n\n[bcryptwiki]: https://en.wikipedia.org/wiki/Bcrypt\n[bcryptgs]: http://mail-index.netbsd.org/tech-crypto/2002/05/24/msg000204.html\n[codahale]: http://codahale.com/how-to-safely-store-a-password/\n[gh13]: https://github.com/ncb000gt/node.bcrypt.js/issues/13\n[jtr]: http://www.openwall.com/lists/oss-security/2011/06/20/2\n\n[shadowfiend]:https://github.com/Shadowfiend\n[thegoleffect]:https://github.com/thegoleffect\n[pixelglow]:https://github.com/pixelglow\n[dtrejo]:https://github.com/dtrejo\n[alfredwesterveld]:https://github.com/alfredwesterveld\n[newitfarmer]:https://github.com/newitfarmer\n[zooko]:https://twitter.com/zooko\n[vincentr]:https://twitter.com/vincentcr\n[lloyd]:https://github.com/lloyd\n[shtylman]:https://github.com/shtylman\n[vadimg]:https://github.com/vadimg\n[bnoordhuis]:https://github.com/bnoordhuis\n[tootallnate]:https://github.com/tootallnate\n[seanmonstar]:https://github.com/seanmonstar\n[weareu]:https://github.com/weareu\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'ec4f153fc1e688ee99fcf2a2808a7d885869061d',
21 silly publish   _id: '@brightproductions/bcrypt@0.8.7',
21 silly publish   _shasum: 'd155e89b5223cb5ee99f40829d9b7baded49b97d',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name @brightproductions/bcrypt
24 silly mapToRegistry scope (from package name) @brightproductions
25 verbose mapToRegistry no registry URL found in name for scope @brightproductions
26 silly mapToRegistry using default registry
27 silly mapToRegistry registry https://registry.npmjs.org/
28 silly mapToRegistry data Result {
28 silly mapToRegistry   raw: '@brightproductions/bcrypt',
28 silly mapToRegistry   scope: '@brightproductions',
28 silly mapToRegistry   escapedName: '@brightproductions%2fbcrypt',
28 silly mapToRegistry   name: '@brightproductions/bcrypt',
28 silly mapToRegistry   rawSpec: '',
28 silly mapToRegistry   spec: 'latest',
28 silly mapToRegistry   type: 'tag' }
29 silly mapToRegistry uri https://registry.npmjs.org/@brightproductions%2fbcrypt
30 verbose publish registryBase https://registry.npmjs.org/
31 silly publish uploading /Users/aurelius/.npm/@brightproductions/bcrypt/0.8.7/package.tgz
32 verbose request uri https://registry.npmjs.org/@brightproductions%2fbcrypt
33 verbose request sending authorization for write operation
34 info attempt registry request try #1 at 12:05:31 PM
35 verbose request using bearer token for auth
36 verbose request id 91e635d7148c9831
37 http request PUT https://registry.npmjs.org/@brightproductions%2fbcrypt
38 http 400 https://registry.npmjs.org/@brightproductions%2fbcrypt
39 verbose headers { date: 'Thu, 13 Aug 2020 19:05:32 GMT',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'content-length': '87',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'set-cookie': [ '__cfduid=d69bd2de8c7da809ba949722844c188d61597345531; expires=Sat, 12-Sep-20 19:05:31 GMT; path=/; domain=.npmjs.org; HttpOnly; SameSite=Lax' ],
39 verbose headers   'cf-ray': '5c24b5450be0ed73-SJC',
39 verbose headers   'cf-cache-status': 'DYNAMIC',
39 verbose headers   'cf-request-id': '048acf9f290000ed73ae0a7200000001',
39 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
39 verbose headers   vary: 'Accept-Encoding',
39 verbose headers   server: 'cloudflare' }
40 verbose request invalidating /Users/aurelius/.npm/registry.npmjs.org/_40brightproductions_252fbcrypt on PUT
41 error publish Failed PUT 400
42 verbose stack Error: Cannot publish over previously published version "0.8.7". : @brightproductions/bcrypt
42 verbose stack     at makeError (/Users/aurelius/.nvm/versions/node/v6.11.3/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
42 verbose stack     at CachingRegistryClient.<anonymous> (/Users/aurelius/.nvm/versions/node/v6.11.3/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
42 verbose stack     at Request._callback (/Users/aurelius/.nvm/versions/node/v6.11.3/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
42 verbose stack     at Request.self.callback (/Users/aurelius/.nvm/versions/node/v6.11.3/lib/node_modules/npm/node_modules/request/request.js:187:22)
42 verbose stack     at emitTwo (events.js:106:13)
42 verbose stack     at Request.emit (events.js:191:7)
42 verbose stack     at Request.<anonymous> (/Users/aurelius/.nvm/versions/node/v6.11.3/lib/node_modules/npm/node_modules/request/request.js:1048:10)
42 verbose stack     at emitOne (events.js:96:13)
42 verbose stack     at Request.emit (events.js:188:7)
42 verbose stack     at IncomingMessage.<anonymous> (/Users/aurelius/.nvm/versions/node/v6.11.3/lib/node_modules/npm/node_modules/request/request.js:969:12)
43 verbose statusCode 400
44 verbose pkgid @brightproductions/bcrypt
45 verbose cwd /Users/aurelius/WebStorm Projects/node.bcrypt.js
46 error Darwin 19.5.0
47 error argv "/Users/aurelius/.nvm/versions/node/v6.11.3/bin/node" "/Users/aurelius/.nvm/versions/node/v6.11.3/bin/npm" "publish" "--access" "public"
48 error node v6.11.3
49 error npm  v3.10.10
50 error code E400
51 error Cannot publish over previously published version "0.8.7". : @brightproductions/bcrypt
52 error If you need help, you may report this error at:
52 error     <https://github.com/npm/npm/issues>
53 verbose exit [ 1, true ]
